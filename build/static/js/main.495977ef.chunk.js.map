{"version":3,"sources":["components/Search/Search.js","components/Card/CardDetails.js","components/Card/Card.js","components/Filter/category/InputGroup.js","Pages/Episodes.js","Pages/Location.js","App.js","reportWebVitals.js","index.js","components/Card/Card.module.scss","components/Search/Search.module.scss"],"names":["Search","_ref","setSearch","updatePageNumber","_jsxs","className","styles","search","children","_jsx","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","CardDetails","id","useParams","fetchedData","updateFetchedData","useState","name","location","origin","gender","image","status","species","api","useEffect","data","fetch","then","res","json","src","alt","Card","display","page","results","map","x","Link","style","textDecoration","to","card","img","content","badge","_Fragment","InputGroup","changeID","total","Array","keys","index","Episodes","setResults","React","info","setInfo","air_date","episode","setID","a","Promise","all","characters","Location","dimension","number","setNumber","residents","Home","pageNumber","updateStatus","updateGender","updateSpecies","slice","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.495977ef.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./Search.module.scss\";\n\nconst Search = ({ setSearch, updatePageNumber }) => {\n  let searchBtn = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <form\n      className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\n    >\n      <input\n        onChange={(e) => {\n          updatePageNumber(1);\n          setSearch(e.target.value);\n        }}\n        placeholder=\"Search for characters\"\n        className={styles.input}\n        type=\"text\"\n      />\n      <button\n        onClick={searchBtn}\n        className={`${styles.btn} btn btn-primary fs-5`}\n      >\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst CardDetails = () => {\n  let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container d-flex justify-content-center mb-5\">\n      <div className=\"d-flex flex-column gap-3\">\n        <h1 className=\"text-center\">{name}</h1>\n\n        <img className=\"img-fluid\" src={image} alt=\"\" />\n        {(() => {\n          if (status === \"Dead\") {\n            return <div className=\"badge bg-danger fs-5\">{status}</div>;\n          } else if (status === \"Alive\") {\n            return <div className=\" badge bg-success fs-5\">{status}</div>;\n          } else {\n            return <div className=\"badge bg-secondary fs-5\">{status}</div>;\n          }\n        })()}\n        <div className=\"content\">\n          <div className=\"\">\n            <span className=\"fw-bold\">Gender : </span>\n            {gender}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Location: </span>\n            {location?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Origin: </span>\n            {origin?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Species: </span>\n            {species}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.scss\";\nimport CardDetails from \"./CardDetails\";\n\nconst Card = ({ page, results }) => {\n  let display;\n\n  if (results) {\n    display = results.map((x) => {\n      let { id, image, name, status, location } = x;\n\n      return (\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`${page}${id}`}\n          key={id}\n          className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n        >\n          <div\n            className={`${styles.card} d-flex flex-column justify-content-center`}\n          >\n            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\n            <div className={`${styles.content}`}>\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\n              <div className=\"\">\n                <div className=\"fs-6 fw-normal\">Last Location</div>\n                <div className=\"fs-5\">{location.name}</div>\n              </div>\n            </div>\n          </div>\n\n          {(() => {\n            if (status === \"Dead\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-danger`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Alive\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-success`}\n                >\n                  {status}\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\n                >\n                  {status}\n                </div>\n              );\n            }\n          })()}\n        </Link>\n      );\n    });\n  } else {\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst InputGroup = ({ name, changeID, total }) => {\n  return (\n    <div className=\"input-group mb-3\">\n      <select\n        onChange={(e) => changeID(e.target.value)}\n        className=\"form-select\"\n        id={name}\n      >\n        <option value=\"1\">Choose...</option>\n        {[...Array(total).keys()].map((x, index) => {\n          return (\n            <option value={x + 1}>\n              {name} - {x + 1}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Episodes = () => {\n  let [results, setResults] = React.useState([]);\n  let [info, setInfo] = useState([]);\n  let { air_date, episode, name } = info;\n  let [id, setID] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.characters.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Episode name :{\" \"}\n          <span className=\"text-primary\">{name === \"\" ? \"Unknown\" : name}</span>\n        </h1>\n        <h5 className=\"text-center\">\n          Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\n        </h5>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Episode</h4>\n          <InputGroup name=\"Episode\" changeID={setID} total={51} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/episodes/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Episodes;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Location = () => {\n  let [results, setResults] = React.useState([]);\n  let [info, setInfo] = useState([]);\n  let { dimension, type, name } = info;\n  let [number, setNumber] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/location/${number}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.residents.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Location :\n          <span className=\"text-primary\">\n            {\" \"}\n            {name === \"\" ? \"Unknown\" : name}\n          </span>\n        </h1>\n        <h5 className=\"text-center\">\n          Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\n        </h5>\n        <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Location</h4>\n          <InputGroup name=\"Location\" changeID={setNumber} total={126} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/location/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Location;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Search from \"./components/Search/Search\";\nimport Card from \"./components/Card/Card\";\n\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Episodes from \"./Pages/Episodes\";\nimport Location from \"./Pages/Location\";\nimport CardDetails from \"./components/Card/CardDetails\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n       \n      </div>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/:id\" element={<CardDetails />} />\n\n        <Route path=\"/episodes\" element={<Episodes />} />\n        <Route path=\"/episodes/:id\" element={<CardDetails />} />\n\n        <Route path=\"/location\" element={<Location />} />\n        <Route path=\"/location/:id\" element={<CardDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  let [pageNumber, updatePageNumber] = useState(1);\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n  let [fetchedData, updateFetchedData] = useState([]);\n  let [search, setSearch] = useState(\"\");\n  let { info, results } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mb-3\">Characters</h1>\n      <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\n      <div className=\"container center-container \">\n        <div className=\"row\">\n         \n          \n            <div className=\"row\">\n              <Card page=\"/\"results={(results || []).slice(0, 10)} />\n            </div>\n          \n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3KhOK\",\"content\":\"Card_content__1azqf\",\"img\":\"Card_img__32QV0\",\"badge\":\"Card_badge__39eOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3TYbr\",\"btn\":\"Search_btn__38Vw_\"};"],"sourceRoot":""}